{
  "name": "projects/511582533367/locations/us-west1/integrations/@@INTEGRATION_NAME@@/versions/1b66f1bd-93bc-4316-9aa2-33dc067ad511",
  "description": "Check an Apigee org for developer apps, examine each for credentials and check expiry. Warn if expired or expiring \"soon\".",
  "createTime": "2025-01-23T05:16:05.358Z",
  "lastModifierEmail": "admin@dchiesa.altostrat.com",
  "triggerConfigs": [
    {
      "label": "Query App",
      "startTasks": [
        {
          "taskId": "9"
        }
      ],
      "properties": {
        "Trigger name": "@@INTEGRATION_NAME@@-one-app"
      },
      "triggerType": "PRIVATE_TRIGGER",
      "triggerNumber": "6",
      "triggerId": "private_trigger/@@INTEGRATION_NAME@@-one-app",
      "position": {
        "x": 112,
        "y": 42
      }
    },
    {
      "label": "Query Organization",
      "startTasks": [
        {
          "taskId": "2"
        }
      ],
      "properties": {
        "Trigger name": "@@INTEGRATION_NAME@@-one-org"
      },
      "triggerType": "PRIVATE_TRIGGER",
      "triggerNumber": "8",
      "triggerId": "private_trigger/@@INTEGRATION_NAME@@-one-org",
      "position": {
        "x": 536,
        "y": 42
      }
    },
    {
      "label": "Schedule Trigger",
      "startTasks": [
        {
          "taskId": "21"
        }
      ],
      "properties": {
        "Scheduled Time spec": "@@SCHEDULE@@",
        "Timer Name": "@@INTEGRATION_NAME@@_Timer_1"
      },
      "triggerType": "CRON",
      "triggerNumber": "1",
      "triggerId": "cron_trigger/@@INTEGRATION_NAME@@_Timer_1/@@SCHED_PLUS@@",
      "position": {
        "x": 960,
        "y": 42
      }
    },
    {
      "label": "Query Credential",
      "startTasks": [
        {
          "taskId": "17"
        }
      ],
      "properties": {
        "Trigger name": "@@INTEGRATION_NAME@@-one-cred"
      },
      "triggerType": "PRIVATE_TRIGGER",
      "triggerNumber": "7",
      "triggerId": "private_trigger/@@INTEGRATION_NAME@@-one-cred",
      "position": {
        "x": 1384,
        "y": 42
      }
    },
    {
      "label": "Query Developer",
      "startTasks": [
        {
          "taskId": "31"
        }
      ],
      "properties": {
        "Trigger name": "@@INTEGRATION_NAME@@-one-dev"
      },
      "triggerType": "PRIVATE_TRIGGER",
      "triggerNumber": "5",
      "triggerId": "private_trigger/@@INTEGRATION_NAME@@-one-dev",
      "position": {
        "x": 1808,
        "y": 42
      }
    }
  ],
  "taskConfigs": [
    {
      "task": "GenericRestV2Task",
      "taskId": "1",
      "parameters": {
        "throwError": {
          "key": "throwError",
          "value": {
            "booleanValue": true
          }
        },
        "responseBody": {
          "key": "responseBody",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_1_responseBody`$"]
            }
          }
        },
        "authConfigName": {
          "key": "authConfigName",
          "value": {
            "stringValue": "@@AUTH_CONFIG@@"
          }
        },
        "disableSSLValidation": {
          "key": "disableSSLValidation",
          "value": {
            "booleanValue": false
          }
        },
        "httpParams": {
          "key": "httpParams"
        },
        "authConfig": {
          "key": "authConfig",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.authconfig.AuthConfigTaskParam\"\n}"
          }
        },
        "responseHeader": {
          "key": "responseHeader",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_1_responseHeader`$"]
            }
          }
        },
        "userAgent": {
          "key": "userAgent",
          "value": {
            "stringValue": ""
          }
        },
        "httpMethod": {
          "key": "httpMethod",
          "value": {
            "stringValue": "GET"
          }
        },
        "responseStatus": {
          "key": "responseStatus",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_1_responseStatus`$"]
            }
          }
        },
        "timeout": {
          "key": "timeout",
          "value": {
            "intValue": "0"
          }
        },
        "url": {
          "key": "url",
          "value": {
            "stringValue": "$apigeeDevelopersUri$"
          }
        },
        "urlFetchingService": {
          "key": "urlFetchingService",
          "value": {
            "stringValue": "HARPOON"
          }
        },
        "useSSL": {
          "key": "useSSL",
          "value": {
            "booleanValue": false
          }
        },
        "requestorId": {
          "key": "requestorId",
          "value": {
            "stringValue": ""
          }
        },
        "urlQueryStrings": {
          "key": "urlQueryStrings"
        },
        "jsonAdditionalHeaders": {
          "key": "jsonAdditionalHeaders",
          "value": {
            "jsonValue": "null"
          }
        },
        "requestBody": {
          "key": "requestBody",
          "value": {
            "stringValue": ""
          }
        },
        "followRedirects": {
          "key": "followRedirects",
          "value": {
            "booleanValue": true
          }
        },
        "additionalHeaders": {
          "key": "additionalHeaders"
        }
      },
      "nextTasks": [
        {
          "taskId": "29"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Retrieve Developers",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 290
      }
    },
    {
      "task": "GenericRestV2Task",
      "taskId": "10",
      "parameters": {
        "throwError": {
          "key": "throwError",
          "value": {
            "booleanValue": true
          }
        },
        "responseBody": {
          "key": "responseBody",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_10_responseBody`$"]
            }
          }
        },
        "authConfigName": {
          "key": "authConfigName",
          "value": {
            "stringValue": "@@AUTH_CONFIG@@"
          }
        },
        "disableSSLValidation": {
          "key": "disableSSLValidation",
          "value": {
            "booleanValue": false
          }
        },
        "httpParams": {
          "key": "httpParams"
        },
        "authConfig": {
          "key": "authConfig",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.authconfig.AuthConfigTaskParam\"\n}"
          }
        },
        "responseHeader": {
          "key": "responseHeader",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_10_responseHeader`$"]
            }
          }
        },
        "userAgent": {
          "key": "userAgent",
          "value": {
            "stringValue": ""
          }
        },
        "httpMethod": {
          "key": "httpMethod",
          "value": {
            "stringValue": "GET"
          }
        },
        "responseStatus": {
          "key": "responseStatus",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_10_responseStatus`$"]
            }
          }
        },
        "timeout": {
          "key": "timeout",
          "value": {
            "intValue": "0"
          }
        },
        "url": {
          "key": "url",
          "value": {
            "stringValue": "$singleAppUri$"
          }
        },
        "urlFetchingService": {
          "key": "urlFetchingService",
          "value": {
            "stringValue": "HARPOON"
          }
        },
        "useSSL": {
          "key": "useSSL",
          "value": {
            "booleanValue": false
          }
        },
        "requestorId": {
          "key": "requestorId",
          "value": {
            "stringValue": ""
          }
        },
        "urlQueryStrings": {
          "key": "urlQueryStrings"
        },
        "jsonAdditionalHeaders": {
          "key": "jsonAdditionalHeaders",
          "value": {
            "jsonValue": "null"
          }
        },
        "requestBody": {
          "key": "requestBody",
          "value": {
            "stringValue": ""
          }
        },
        "followRedirects": {
          "key": "followRedirects",
          "value": {
            "booleanValue": true
          }
        },
        "additionalHeaders": {
          "key": "additionalHeaders"
        }
      },
      "nextTasks": [
        {
          "taskId": "11"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Inquire developer app",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 112,
        "y": 290
      }
    },
    {
      "task": "FieldMappingTask",
      "taskId": "11",
      "parameters": {
        "FieldMappingConfigTaskParameterKey": {
          "key": "FieldMappingConfigTaskParameterKey",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"JSON_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$`Task_10_responseBody`$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"TO_JSON\"\n            }\n          }\n        }, {\n          \"functionType\": {\n            \"jsonFunction\": {\n              \"functionName\": \"GET_PROPERTY\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"credentials\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$appCredentials$\",\n      \"fieldType\": \"JSON_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "12"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Extract Credential Info",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 112,
        "y": 414
      }
    },
    {
      "task": "SubWorkflowForEachLoopV2Task",
      "taskId": "12",
      "parameters": {
        "iterationElementMapping": {
          "key": "iterationElementMapping",
          "value": {
            "stringValue": "credInfo"
          }
        },
        "aggregatorParameterMapping": {
          "key": "aggregatorParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"flagged\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCreds\"\n      }\n    }\n  }]\n}"
          }
        },
        "triggerId": {
          "key": "triggerId",
          "value": {
            "stringValue": "private_trigger/@@INTEGRATION_NAME@@-one-cred"
          }
        },
        "loopMetadata": {
          "key": "loopMetadata",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_12_loopMetadata`$"]
            }
          }
        },
        "disableEucPropagation": {
          "key": "disableEucPropagation",
          "value": {
            "booleanValue": false
          }
        },
        "listToIterate": {
          "key": "listToIterate",
          "value": {
            "stringValue": "$appCredentials$"
          }
        },
        "workflowName": {
          "key": "workflowName",
          "value": {
            "stringValue": "@@INTEGRATION_NAME@@"
          }
        },
        "requestParameterMapping": {
          "key": "requestParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    }\n  }]\n}"
          }
        },
        "overrideParameterMapping": {
          "key": "overrideParameterMapping"
        }
      },
      "nextTasks": [
        {
          "taskId": "22"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "For Each Credential",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 112,
        "y": 538
      }
    },
    {
      "task": "JavaScriptTask",
      "taskId": "17",
      "parameters": {
        "javaScriptEngine": {
          "key": "javaScriptEngine",
          "value": {
            "stringValue": "V8"
          }
        },
        "script": {
          "key": "script",
          "value": {
            "stringValue": "function getNeedAlert(soonThreshold) {\n  return function(delta) {\n    if (delta \u003c 0) return \"expired\";\n    if (delta \u003c soonThreshold) return \"expires soon\";\n    return false;\n  };\n}\n/**\n * Function that is called during the JavaScript Task execution.\n * @param {IntegrationEvent} event\n */\n\nfunction executeScript(event) {\n  var soonThreshold \u003d Number(event.getParameter(\"soonThresholdMs\"));\n  if (soonThreshold) {\n    event.log(\"have soonThreshold: \" + soonThreshold.toFixed(0)); \n    var credInfo \u003d event.getParameter(\u0027credInfo\u0027); // is json\n    var needAlert \u003d getNeedAlert(soonThreshold);\n    if (credInfo.hasOwnProperty(\"expiresAt\")) {\n      var expiryMs \u003d Number(credInfo.expiresAt);\n      if (expiryMs !\u003d -1) {\n        // convert\n        var currentTimeMs \u003d new Date().valueOf();\n        var key \u003d credInfo.consumerKey;\n        var delta \u003d expiryMs - currentTimeMs;\n        var reason \u003d needAlert(delta); \n        if (reason) {\n          event.log(\"reason: \" + reason);\n          var payload \u003d {\n            \"key\": credInfo.consumerKey,\n            \"expiry\": expiryMs,\n            \"expiryDate\": new Date(expiryMs).toISOString(),\n            \"delta\": delta,\n            \"reason\": reason\n          };\n          event.log(\"payload: \" + JSON.stringify(payload));\n          event.log(\"log A\");\n          event.setParameter(\"flagged\", payload);\n          event.log(\"log B\");\n        }\n        else {\n          event.log(\"no reason.\");\n        }\n      }\n    }\n    event.log(\"done checking\"); \n  }\n  else {\n    event.log(\"no soonThreshold\"); \n  }\n}"
          }
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "JavaScript",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1384,
        "y": 166
      }
    },
    {
      "task": "EmailTask",
      "taskId": "18",
      "parameters": {
        "Cc": {
          "key": "Cc",
          "value": {
            "stringArray": {}
          }
        },
        "TextBody": {
          "key": "TextBody",
          "value": {
            "stringValue": "\u003chtml\u003e\n  \u003chead\u003e\n    \u003cstyle\u003e\n     #innerBody \u003e table {\n       border-spacing: 0px;\n       border-collapse: separate;\n       border: 1px solid black;\n     }\n     #innerBody \u003e table tr th, #innerBody \u003e table tr td {\n       border: 1px solid #242424;\n       padding: 2px 2px;\n     }\n     #innerBody \u003e table tr th {\n       color:#$tableHeaderFg$;\n       background-color:#$tableHeaderBg$;\n     }\n     #innerBody \u003e table tr td {\n       color: black;\n       background-color: #ffffff;\n       border-color:#dcdcdc;\n     }\n     #innerBody \u003e table tr td.expired {\n       color: white;\n       background-color: #b22222;\n     }\n     #innerBody \u003e table tr td.expires-soon {\n       color: white;\n       background-color: #ffa500;\n     }\n    \u003c/style\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cdiv id\u003d\u0027innerBody\u0027\u003e\n    \u003ch4\u003eInputs\u003c/h4\u003e\n    \u003ctable\u003e\n      \u003ctbody\u003e\n        \u003ctr\u003e\n          \u003cth align\u003d\u0027left\u0027\u003etime threshold\u003c/th\u003e\n          \u003ctd\u003e$friendlyTimespan$\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003cth align\u003d\u0027left\u0027\u003eApigee Organization\u003c/th\u003e\n          \u003ctd\u003e$orgName$\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/tbody\u003e\n    \u003c/table\u003e\n      \n    \u003ch4\u003eResults of Scan\u003c/h4\u003e\n    $formattedEmailTable$\n\n    \u003c/div\u003e\n  \u003c/body\u003e\n\u003c/html\u003e"
          }
        },
        "Bcc": {
          "key": "Bcc",
          "value": {
            "stringArray": {}
          }
        },
        "AttachmentPath": {
          "key": "AttachmentPath",
          "value": {
            "stringArray": {}
          }
        },
        "ThrowNoRequiredInputException": {
          "key": "ThrowNoRequiredInputException",
          "value": {
            "booleanValue": true
          }
        },
        "To": {
          "key": "To",
          "value": {
            "stringArray": {
              "stringValues": ["$emailAddress$"]
            }
          }
        },
        "BodyFormat": {
          "key": "BodyFormat",
          "value": {
            "stringValue": "html"
          }
        },
        "EmailConfigInput": {
          "key": "EmailConfigInput",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.EmailConfig\"\n}"
          }
        },
        "Subject": {
          "key": "Subject",
          "value": {
            "stringValue": "API Key expiry report for $orgName$"
          }
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Send Admin Email",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 786
      }
    },
    {
      "task": "FieldMappingTask",
      "taskId": "2",
      "parameters": {
        "FieldMappingConfigTaskParameterKey": {
          "key": "FieldMappingConfigTaskParameterKey",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"literalValue\": {\n            \"stringValue\": \"https://apigee.googleapis.com/v1/organizations/\"\n          }\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"referenceValue\": \"$orgName$\"\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$apigeeOrgBaseUri$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }, {\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$apigeeOrgBaseUri$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"/developers\"\n              }\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$apigeeDevelopersUri$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "1"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Produce initial URIs",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 166
      }
    },
    {
      "task": "JavaScriptTask",
      "taskId": "21",
      "parameters": {
        "javaScriptEngine": {
          "key": "javaScriptEngine",
          "value": {
            "stringValue": "V8"
          }
        },
        "script": {
          "key": "script",
          "value": {
            "stringValue": "function getPair(num, unit) {\n  switch (unit) {\n    case \u0027s\u0027:\n      return [num.toFixed(0) + \u0027 seconds\u0027,num * 1000];\n    case \u0027m\u0027:\n      return [num.toFixed(0) + \u0027 minutes\u0027, num * 60 * 1000];\n    case \u0027h\u0027:\n      return [num.toFixed(0) + \u0027 hours\u0027, num * 60 * 60 * 1000];\n    case \u0027d\u0027:\n      return [num.toFixed(0) + \u0027 days\u0027, num * 24 * 60 * 60 * 1000];\n    case \u0027y\u0027:\n      return [num.toFixed(0) + \u0027 years\u0027, num * 365 * 24 * 60 * 60 * 1000];\n    default:\n      return [\u002730 days\u0027, 30 * 24 * 60 * 60 * 1000]; // thirty days by default\n      //throw new Error(\u0027Invalid timespan format\u0027);\n  }\n}\n\nfunction digestTimespan(timespan) {\n  if (timespan) {\n    const num \u003d parseInt(timespan);\n    const unit \u003d timespan.slice(-1);\n    const pair \u003d getPair(num,unit);\n\n    return {\n      ms: pair[1],\n      friendly: pair[0]\n    };\n  }\n  const defaultPair \u003d getPair(\"30\", \u0027d\u0027);\n\n  return {\n    ms: defaultPair[1],\n    friendly: defaultPair[0]\n  };\n}\n\nfunction executeScript(event) {\n  var configuredThreshold \u003d event.getParameter(\"`CONFIG_soonThreshold`\");\n  var digest \u003d digestTimespan(configuredThreshold);\n\n  event.setParameter(\"soonThresholdMs\", digest.ms);\n  event.setParameter(\"friendlyTimespan\", digest.friendly );\n\n  // copy CONFIG variables to sidestep runtime bug b/385006505\n  event.setParameter(\"emailAddress\", event.getParameter(\"`CONFIG_emailAddress`\"));\n  event.setParameter(\"tableHeaderBg\", event.getParameter(\"`CONFIG_tableHeaderBg`\"));\n  event.setParameter(\"tableHeaderFg\", event.getParameter(\"`CONFIG_tableHeaderFg`\"));\n\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "25"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Initialize Exec state",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 960,
        "y": 166
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "22",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "local f \u003d import \"functions\"; // Import additional functions\nlocal arr \u003d f.extVar(\"alertedCreds\"); \nlocal appname \u003d f.extVar(\"appName\"); \n\n{\n    alertedCreds : {\n      [appname] : std.filter(function (x) x !\u003d null, arr)\n    }\n}"
          }
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Collect creds for App",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 112,
        "y": 662
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "23",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "local arr \u003d std.extVar(\"alertedCreds\"); \nlocal devemail \u003d std.extVar(\"emailAddress\"); \n\n{\n    alertedCreds : {\n      [devemail] :  std.filter(function (x) x !\u003d null, arr)\n    }\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "30"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Collect apps for Dev",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 2020,
        "y": 786
      }
    },
    {
      "task": "JavaScriptTask",
      "taskId": "24",
      "parameters": {
        "javaScriptEngine": {
          "key": "javaScriptEngine",
          "value": {
            "stringValue": "V8"
          }
        },
        "script": {
          "key": "script",
          "value": {
            "stringValue": "function wrapInTable(rowsHtml) {\n  var html \u003d\n    \"\u003ctable\u003e\\n\" +\n    \"\u003ctbody\u003e\\n\" +\n    \"  \u003ctr\u003e\u003cth colspan\u003d\u00274\u0027\u003eAPIkeys Expiry Report\u003c/th\u003e\u003c/tr\u003e\\n\";\n  html +\u003d\n    \"  \u003ctr\u003e\\n\" +\n    \"    \u003cth align\u003d\u0027left\u0027\u003eemail\u003c/th\u003e\\n\" +\n    \"    \u003cth align\u003d\u0027left\u0027\u003eapikey\u003c/th\u003e\\n\" +\n    \"    \u003cth align\u003d\u0027left\u0027\u003eexpiry\u003c/th\u003e\\n\" +\n    \"    \u003cth align\u003d\u0027left\u0027\u003estatus\u003c/th\u003e\\n\" +\n    \"  \u003c/tr\u003e\\n\";\n  html +\u003d rowsHtml;\n  html +\u003d \"\\n\u003c/tbody\u003e\u003c/table\u003e\\n\";\n  return html;\n}\n\n\nfunction handleOneDev(blob) {\n  var devEmail \u003d Object.keys(blob)[0];\n\n  // blob[devEmail] is an array of appinfos, each one has a single key\n  return blob[devEmail]\n    .map(function (appBlob) {\n      var appName \u003d Object.keys(appBlob)[0];\n      return appBlob[appName]\n        .map(function (appCred) {\n          var status \u003d appCred.reason \u003d\u003d \"expired\" ? \"expired\" : \"expires-soon\";\n          var row \u003d\n            \"  \u003ctr\u003e\\n\" +\n            \"    \u003ctd\u003e\" +\n            devEmail +\n            \"\u003c/td\u003e\" +\n            \" \u003ctd\u003e\" +\n            appCred.key +\n            \"\u003c/td\u003e\" +\n            \" \u003ctd\u003e\" +\n            appCred.expiryDate +\n            \"\u003c/td\u003e\" +\n            \" \u003ctd class\u003d\u0027\" +\n            status +\n            \"\u0027\u003e\" +\n            appCred.reason +\n            \"\u003c/td\u003e\\n\" +\n            \"  \u003c/tr\u003e\";\n          return row;\n        })\n        .join(\"\\n\");\n    })\n    .join(\"\\n\");\n}\n\n\nfunction executeScript(event) {\n  var alertedCreds \u003d event.getParameter(\"alertedCreds\");\n  var html \u003d alertedCreds.map(handleOneDev).join(\"\\n\");\n  event.setParameter(\"formattedEmailTable\", wrapInTable(html));\n}\n"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "18"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Construct Admin email",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 662
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "25",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "{ \n    orgList: [std.stripChars(x,\u0027 \u0027) for x in std.split(std.extVar(\"`CONFIG_organizationList`\"), \",\")]\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "26"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Split org list",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 960,
        "y": 290
      }
    },
    {
      "task": "SubWorkflowForEachLoopV2Task",
      "taskId": "26",
      "parameters": {
        "iterationElementMapping": {
          "key": "iterationElementMapping",
          "value": {
            "stringValue": "orgName"
          }
        },
        "aggregatorParameterMapping": {
          "key": "aggregatorParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCerts\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCerts\"\n      }\n    }\n  }]\n}"
          }
        },
        "triggerId": {
          "key": "triggerId",
          "value": {
            "stringValue": "private_trigger/@@INTEGRATION_NAME@@-one-org"
          }
        },
        "loopMetadata": {
          "key": "loopMetadata",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_26_loopMetadata`$"]
            }
          }
        },
        "disableEucPropagation": {
          "key": "disableEucPropagation",
          "value": {
            "booleanValue": false
          }
        },
        "listToIterate": {
          "key": "listToIterate",
          "value": {
            "stringValue": "$orgList$"
          }
        },
        "workflowName": {
          "key": "workflowName",
          "value": {
            "stringValue": "@@INTEGRATION_NAME@@"
          }
        },
        "requestParameterMapping": {
          "key": "requestParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"emailAddress\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"emailAddress\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"friendlyTimespan\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"friendlyTimespan\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"tableHeaderBg\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"tableHeaderBg\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"tableHeaderFg\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"tableHeaderFg\"\n      }\n    }\n  }]\n}"
          }
        },
        "overrideParameterMapping": {
          "key": "overrideParameterMapping",
          "value": {}
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "For Each organization",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 960,
        "y": 414
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "27",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "local resp \u003d std.parseJson(std.extVar(\"`Task_6_responseBody`\"));\n\nlocal apps \u003d if \u0027apps\u0027 in resp then resp.apps else [];\n{\n  devapps: apps,\n  numapps: std.length(apps),\n}\n"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "28",
          "condition": "$numapps$ \u003d 0"
        },
        {
          "taskId": "8",
          "condition": "$numapps$ \u003e 0"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Extract apps",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1808,
        "y": 538
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "28",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "local devemail \u003d std.extVar(\"emailAddress\"); \n\n{\n    alertedCreds : {\n      [devemail] : []     \n    }\n}"
          }
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Set Default Data",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1384,
        "y": 662
      }
    },
    {
      "task": "JsonnetMapperTask",
      "taskId": "29",
      "parameters": {
        "template": {
          "key": "template",
          "value": {
            "stringValue": "local dlist \u003d std.parseJson(std.extVar(\"`Task_1_responseBody`\"));\n\n{\n  emails: std.map(function(d) d.email, dlist.developer),\n}\n"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "3"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Normalize Developer List",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 414
      }
    },
    {
      "task": "SubWorkflowForEachLoopV2Task",
      "taskId": "3",
      "parameters": {
        "iterationElementMapping": {
          "key": "iterationElementMapping",
          "value": {
            "stringValue": "emailAddress"
          }
        },
        "aggregatorParameterMapping": {
          "key": "aggregatorParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCreds\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCreds\"\n      }\n    }\n  }]\n}"
          }
        },
        "triggerId": {
          "key": "triggerId",
          "value": {
            "stringValue": "private_trigger/@@INTEGRATION_NAME@@-one-dev"
          }
        },
        "loopMetadata": {
          "key": "loopMetadata",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_3_loopMetadata`$"]
            }
          }
        },
        "disableEucPropagation": {
          "key": "disableEucPropagation",
          "value": {
            "booleanValue": false
          }
        },
        "listToIterate": {
          "key": "listToIterate",
          "value": {
            "stringValue": "$emails$"
          }
        },
        "workflowName": {
          "key": "workflowName",
          "value": {
            "stringValue": "@@INTEGRATION_NAME@@"
          }
        },
        "requestParameterMapping": {
          "key": "requestParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"apigeeDevelopersUri\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"apigeeDevelopersUri\"\n      }\n    }\n  }]\n}"
          }
        },
        "overrideParameterMapping": {
          "key": "overrideParameterMapping"
        }
      },
      "nextTasks": [
        {
          "taskId": "24"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "For Each developer",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 536,
        "y": 538
      }
    },
    {
      "task": "JavaScriptTask",
      "taskId": "30",
      "parameters": {
        "javaScriptEngine": {
          "key": "javaScriptEngine",
          "value": {
            "stringValue": "V8"
          }
        },
        "script": {
          "key": "script",
          "value": {
            "stringValue": "\n/**\n * Function that is called during the JavaScript Task execution.\n * @param {IntegrationEvent} event\n */\nfunction executeScript(event) {\n}"
          }
        }
      },
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Format Dev Email",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 2020,
        "y": 910
      }
    },
    {
      "task": "JavaScriptTask",
      "taskId": "31",
      "parameters": {
        "javaScriptEngine": {
          "key": "javaScriptEngine",
          "value": {
            "stringValue": "V8"
          }
        },
        "script": {
          "key": "script",
          "value": {
            "stringValue": "\n/**\n * Function that is called during the JavaScript Task execution.\n * @param {IntegrationEvent} event\n */\nfunction executeScript(event) {\n    var email \u003d event.getParameter(\u0027emailAddress\u0027);\n    event.setParameter(\u0027uriEncodedEmailAddress\u0027, encodeURIComponent(email));\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "5"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "JS - encode email addr",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1808,
        "y": 166
      }
    },
    {
      "task": "FieldMappingTask",
      "taskId": "5",
      "parameters": {
        "FieldMappingConfigTaskParameterKey": {
          "key": "FieldMappingConfigTaskParameterKey",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$apigeeDevelopersUri$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"/\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"referenceValue\": \"$uriEncodedEmailAddress$\"\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$developerUri$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "6"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Produce developer URI",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1808,
        "y": 290
      }
    },
    {
      "task": "GenericRestV2Task",
      "taskId": "6",
      "parameters": {
        "throwError": {
          "key": "throwError",
          "value": {
            "booleanValue": true
          }
        },
        "responseBody": {
          "key": "responseBody",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_6_responseBody`$"]
            }
          }
        },
        "authConfigName": {
          "key": "authConfigName",
          "value": {
            "stringValue": "@@AUTH_CONFIG@@"
          }
        },
        "disableSSLValidation": {
          "key": "disableSSLValidation",
          "value": {
            "booleanValue": false
          }
        },
        "httpParams": {
          "key": "httpParams"
        },
        "authConfig": {
          "key": "authConfig",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.authconfig.AuthConfigTaskParam\"\n}"
          }
        },
        "responseHeader": {
          "key": "responseHeader",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_6_responseHeader`$"]
            }
          }
        },
        "userAgent": {
          "key": "userAgent",
          "value": {
            "stringValue": ""
          }
        },
        "httpMethod": {
          "key": "httpMethod",
          "value": {
            "stringValue": "GET"
          }
        },
        "responseStatus": {
          "key": "responseStatus",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_6_responseStatus`$"]
            }
          }
        },
        "timeout": {
          "key": "timeout",
          "value": {
            "intValue": "0"
          }
        },
        "url": {
          "key": "url",
          "value": {
            "stringValue": "$developerUri$"
          }
        },
        "urlFetchingService": {
          "key": "urlFetchingService",
          "value": {
            "stringValue": "HARPOON"
          }
        },
        "useSSL": {
          "key": "useSSL",
          "value": {
            "booleanValue": false
          }
        },
        "requestorId": {
          "key": "requestorId",
          "value": {
            "stringValue": ""
          }
        },
        "urlQueryStrings": {
          "key": "urlQueryStrings"
        },
        "jsonAdditionalHeaders": {
          "key": "jsonAdditionalHeaders",
          "value": {
            "jsonValue": "null"
          }
        },
        "requestBody": {
          "key": "requestBody",
          "value": {
            "stringValue": ""
          }
        },
        "followRedirects": {
          "key": "followRedirects",
          "value": {
            "booleanValue": true
          }
        },
        "additionalHeaders": {
          "key": "additionalHeaders"
        }
      },
      "nextTasks": [
        {
          "taskId": "27"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Retrieve developer apps",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 1808,
        "y": 414
      }
    },
    {
      "task": "SubWorkflowForEachLoopV2Task",
      "taskId": "8",
      "parameters": {
        "iterationElementMapping": {
          "key": "iterationElementMapping",
          "value": {
            "stringValue": "appName"
          }
        },
        "aggregatorParameterMapping": {
          "key": "aggregatorParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCreds\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"alertedCreds\"\n      }\n    }\n  }]\n}"
          }
        },
        "triggerId": {
          "key": "triggerId",
          "value": {
            "stringValue": "private_trigger/@@INTEGRATION_NAME@@-one-app"
          }
        },
        "loopMetadata": {
          "key": "loopMetadata",
          "value": {
            "stringArray": {
              "stringValues": ["$`Task_8_loopMetadata`$"]
            }
          }
        },
        "disableEucPropagation": {
          "key": "disableEucPropagation",
          "value": {
            "booleanValue": false
          }
        },
        "listToIterate": {
          "key": "listToIterate",
          "value": {
            "stringValue": "$devapps$"
          }
        },
        "workflowName": {
          "key": "workflowName",
          "value": {
            "stringValue": "@@INTEGRATION_NAME@@"
          }
        },
        "requestParameterMapping": {
          "key": "requestParameterMapping",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.ParameterMap\",\n  \"entries\": [{\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"developerUri\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"developerUri\"\n      }\n    }\n  }, {\n    \"key\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    },\n    \"value\": {\n      \"literalValue\": {\n        \"stringValue\": \"soonThresholdMs\"\n      }\n    }\n  }]\n}"
          }
        },
        "overrideParameterMapping": {
          "key": "overrideParameterMapping"
        }
      },
      "nextTasks": [
        {
          "taskId": "23"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "For Each Developer App",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 2020,
        "y": 662
      }
    },
    {
      "task": "FieldMappingTask",
      "taskId": "9",
      "parameters": {
        "FieldMappingConfigTaskParameterKey": {
          "key": "FieldMappingConfigTaskParameterKey",
          "value": {
            "jsonValue": "{\n  \"@type\": \"type.googleapis.com/enterprise.crm.eventbus.proto.FieldMappingConfig\",\n  \"mappedFields\": [{\n    \"inputField\": {\n      \"fieldType\": \"STRING_VALUE\",\n      \"transformExpression\": {\n        \"initialValue\": {\n          \"referenceValue\": \"$developerUri$\"\n        },\n        \"transformationFunctions\": [{\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"literalValue\": {\n                \"stringValue\": \"/apps/\"\n              }\n            }\n          }]\n        }, {\n          \"functionType\": {\n            \"stringFunction\": {\n              \"functionName\": \"CONCAT\"\n            }\n          },\n          \"parameters\": [{\n            \"initialValue\": {\n              \"referenceValue\": \"$appName$\"\n            }\n          }]\n        }]\n      }\n    },\n    \"outputField\": {\n      \"referenceKey\": \"$singleAppUri$\",\n      \"fieldType\": \"STRING_VALUE\",\n      \"cardinality\": \"OPTIONAL\"\n    }\n  }]\n}"
          }
        }
      },
      "nextTasks": [
        {
          "taskId": "10",
          "condition": "\n"
        }
      ],
      "taskExecutionStrategy": "WHEN_ALL_SUCCEED",
      "displayName": "Produce URI for single app",
      "externalTaskType": "NORMAL_TASK",
      "position": {
        "x": 112,
        "y": 166
      }
    }
  ],
  "integrationParameters": [
    {
      "key": "`ExecutionMode`",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "`ExecutionMode`",
      "isTransient": true
    },
    {
      "key": "`ErrorInfo`",
      "dataType": "JSON_VALUE",
      "defaultValue": {
        "jsonValue": "{\n  \"message\": \"\",\n  \"code\": 0.0\n}"
      },
      "displayName": "`ErrorInfo`",
      "isTransient": true,
      "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"code\": {\n      \"type\": \"number\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}"
    },
    {
      "key": "`ExecutionId`",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "`ExecutionId`",
      "isTransient": true
    },
    {
      "key": "`IntegrationName`",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "`IntegrationName`",
      "isTransient": true
    },
    {
      "key": "`Region`",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "`Region`",
      "isTransient": true
    },
    {
      "key": "`ProjectId`",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "`ProjectId`",
      "isTransient": true
    },
    {
      "key": "`Task_1_responseHeader`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_1_responseHeader`",
      "isTransient": true,
      "producer": "1_1"
    },
    {
      "key": "`Task_1_responseBody`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_1_responseBody`",
      "isTransient": true,
      "producer": "1_1"
    },
    {
      "key": "`Task_1_responseStatus`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_1_responseStatus`",
      "isTransient": true,
      "producer": "1_1"
    },
    {
      "key": "apigeeOrgBaseUri",
      "dataType": "STRING_VALUE",
      "displayName": "apigeeOrgBaseUri",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "`Task_3_loopMetadata`",
      "dataType": "JSON_VALUE",
      "displayName": "`Task_3_loopMetadata`",
      "isTransient": true,
      "producer": "1_3",
      "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sub_integration_execution_ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"current_iteration_count\": {\n      \"type\": \"number\"\n    },\n    \"failure_message\": {\n      \"type\": \"string\"\n    },\n    \"failure_location\": {\n      \"type\": \"string\"\n    },\n    \"current_element\": {\n      \"type\": [\"string\", \"number\", \"object\", \"array\"]\n    }\n  }\n}"
    },
    {
      "key": "`Task_6_responseHeader`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_6_responseHeader`",
      "isTransient": true,
      "producer": "1_6"
    },
    {
      "key": "`Task_6_responseBody`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_6_responseBody`",
      "isTransient": true,
      "producer": "1_6"
    },
    {
      "key": "`Task_6_responseStatus`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_6_responseStatus`",
      "isTransient": true,
      "producer": "1_6"
    },
    {
      "key": "keystoreList",
      "dataType": "STRING_ARRAY",
      "displayName": "keystoreList",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "`Task_8_loopMetadata`",
      "dataType": "JSON_VALUE",
      "displayName": "`Task_8_loopMetadata`",
      "isTransient": true,
      "producer": "1_8",
      "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sub_integration_execution_ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"current_iteration_count\": {\n      \"type\": \"number\"\n    },\n    \"failure_message\": {\n      \"type\": \"string\"\n    },\n    \"failure_location\": {\n      \"type\": \"string\"\n    },\n    \"current_element\": {\n      \"type\": [\"string\", \"number\", \"object\", \"array\"]\n    }\n  }\n}"
    },
    {
      "key": "`Task_10_responseHeader`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_10_responseHeader`",
      "isTransient": true,
      "producer": "1_10"
    },
    {
      "key": "`Task_10_responseBody`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_10_responseBody`",
      "isTransient": true,
      "producer": "1_10"
    },
    {
      "key": "`Task_10_responseStatus`",
      "dataType": "STRING_VALUE",
      "displayName": "`Task_10_responseStatus`",
      "isTransient": true,
      "producer": "1_10"
    },
    {
      "key": "`Task_12_loopMetadata`",
      "dataType": "JSON_VALUE",
      "displayName": "`Task_12_loopMetadata`",
      "isTransient": true,
      "producer": "1_12",
      "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sub_integration_execution_ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"current_iteration_count\": {\n      \"type\": \"number\"\n    },\n    \"failure_message\": {\n      \"type\": \"string\"\n    },\n    \"failure_location\": {\n      \"type\": \"string\"\n    },\n    \"current_element\": {\n      \"type\": [\"string\", \"number\", \"object\", \"array\"]\n    }\n  }\n}"
    },
    {
      "key": "certInfoArray",
      "dataType": "STRING_VALUE",
      "displayName": "certInfoArray",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "jsonFormatString",
      "dataType": "STRING_VALUE",
      "displayName": "jsonFormatString",
      "inputOutputType": "OUT"
    },
    {
      "key": "flagged",
      "dataType": "JSON_VALUE",
      "defaultValue": {
        "jsonValue": "null"
      },
      "displayName": "flagged",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "executionState",
      "dataType": "JSON_VALUE",
      "defaultValue": {
        "jsonValue": "{\n}"
      },
      "displayName": "executionState",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "soonThresholdMs",
      "dataType": "DOUBLE_VALUE",
      "defaultValue": {},
      "displayName": "soonThresholdMs",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "`Task_26_loopMetadata`",
      "dataType": "JSON_VALUE",
      "displayName": "`Task_26_loopMetadata`",
      "isTransient": true,
      "producer": "1_26",
      "jsonSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sub_integration_execution_ids\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"current_iteration_count\": {\n      \"type\": \"number\"\n    },\n    \"failure_message\": {\n      \"type\": \"string\"\n    },\n    \"failure_location\": {\n      \"type\": \"string\"\n    },\n    \"current_element\": {\n      \"type\": [\"string\", \"number\", \"object\", \"array\"]\n    }\n  }\n}"
    },
    {
      "key": "orgList",
      "dataType": "STRING_ARRAY",
      "displayName": "orgList",
      "inputOutputType": "OUT"
    },
    {
      "key": "orgName",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "orgName",
      "inputOutputType": "IN"
    },
    {
      "key": "emailAddress",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "emailAddress",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "friendlyTimespan",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "friendlyTimespan",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "tableHeaderBg",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "tableHeaderBg",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "tableHeaderFg",
      "dataType": "STRING_VALUE",
      "defaultValue": {
        "stringValue": ""
      },
      "displayName": "tableHeaderFg",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "emails",
      "dataType": "STRING_ARRAY",
      "displayName": "emails",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "developerEmail",
      "dataType": "STRING_VALUE",
      "displayName": "developerEmail",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "devapps",
      "dataType": "STRING_ARRAY",
      "displayName": "devapps",
      "inputOutputType": "OUT"
    },
    {
      "key": "developerAppName",
      "dataType": "STRING_VALUE",
      "displayName": "developerAppName",
      "inputOutputType": "IN"
    },
    {
      "key": "developerUri",
      "dataType": "STRING_VALUE",
      "displayName": "developerUri",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "apigeeDevelopersUri",
      "dataType": "STRING_VALUE",
      "displayName": "apigeeDevelopersUri",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "appName",
      "dataType": "STRING_VALUE",
      "displayName": "appName",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "singleAppUri",
      "dataType": "STRING_VALUE",
      "displayName": "singleAppUri",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "appCredentials",
      "dataType": "JSON_VALUE",
      "displayName": "appCredentials"
    },
    {
      "key": "credInfo",
      "dataType": "STRING_VALUE",
      "displayName": "credInfo",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "alertedCreds",
      "dataType": "JSON_VALUE",
      "defaultValue": {
        "jsonValue": "[]"
      },
      "displayName": "alertedCreds",
      "inputOutputType": "IN_OUT"
    },
    {
      "key": "uriEncodedEmailAddress",
      "dataType": "STRING_VALUE",
      "displayName": "uriEncodedEmailAddress",
      "inputOutputType": "IN_OUT"
    }
  ],
  "databasePersistencePolicy": "DATABASE_PERSISTENCE_ASYNC",
  "cloudLoggingDetails": {
    "cloudLoggingSeverity": "CLOUD_LOGGING_SEVERITY_UNSPECIFIED",
    "enableCloudLogging": false
  },
  "integrationConfigParameters": [
    {
      "parameter": {
        "key": "`CONFIG_organizationList`",
        "dataType": "STRING_VALUE",
        "defaultValue": {
          "stringValue": "@@APIGEE_PROJECTS@@"
        },
        "displayName": "`CONFIG_organizationList`"
      },
      "value": {
        "stringValue": "@@APIGEE_PROJECTS@@"
      }
    },
    {
      "parameter": {
        "key": "`CONFIG_tableHeaderFg`",
        "dataType": "STRING_VALUE",
        "defaultValue": {
          "stringValue": "ffffff"
        },
        "displayName": "`CONFIG_tableHeaderFg`"
      },
      "value": {
        "stringValue": "ffffff"
      }
    },
    {
      "parameter": {
        "key": "`CONFIG_tableHeaderBg`",
        "dataType": "STRING_VALUE",
        "defaultValue": {
          "stringValue": "008033"
        },
        "displayName": "`CONFIG_tableHeaderBg`"
      },
      "value": {
        "stringValue": "008033"
      }
    },
    {
      "parameter": {
        "key": "`CONFIG_emailAddress`",
        "dataType": "STRING_VALUE",
        "defaultValue": {
          "stringValue": "@@EMAIL_ADDR@@"
        },
        "displayName": "`CONFIG_emailAddress`"
      },
      "value": {
        "stringValue": "@@EMAIL_ADDR@@"
      }
    },
    {
      "parameter": {
        "key": "`CONFIG_soonThreshold`",
        "dataType": "STRING_VALUE",
        "defaultValue": {
          "stringValue": "60d"
        },
        "displayName": "`CONFIG_soonThreshold`"
      },
      "value": {
        "stringValue": "60d"
      }
    }
  ]
}
